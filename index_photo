import { BusinessError } from '@kit.BasicServicesKit';
import photoAccessHelper from '@ohos.file.photoAccessHelper';
//导入库阶段
//import { photoAccessHelper } from '@kit.MediaLibraryKit';
let uris: Array<string> = [];
// 创建图片文件选择实例
let photoSelectOptions = new photoAccessHelper.PhotoSelectOptions();
let photo_select =() =>{
  // 设置选择媒体文件类型为IMAGE，设置选择媒体文件的最大数目
  photoSelectOptions.MIMEType = photoAccessHelper.PhotoViewMIMETypes.IMAGE_TYPE;
  photoSelectOptions.maxSelectNumber = 1;
  // 创建图库选择器实例，调用select()接口拉起图库界面进行文件选择。文件选择成功后，返回photoSelectResult结果集。
  let photoPicker = new photoAccessHelper.PhotoViewPicker();
  photoPicker.select(photoSelectOptions, async (
    err: BusinessError, photoSelectResult: photoAccessHelper.PhotoSelectResult) => {
    if (err) {
      console.error('MS_LITE_ERR: PhotoViewPicker.select failed with err: ' + JSON.stringify(err));
      return;
    }
    console.info('MS_LITE_LOG: PhotoViewPicker.select successfully, ' +
      'photoSelectResult uri: ' + JSON.stringify(photoSelectResult));
    uris = photoSelectResult.photoUris;
    console.info('MS_LITE_LOG: uri: ' + uris);
  })
}
@Entry
@Component
struct Index {
  build() {
    Column() { // 这是一个单一的根容器组件

      Row() {
        Column(){
        Text('面具刺客—伪造检测')
          .width('100%')
          .height(60)
          .fontWeight(FontWeight.Medium)
          .fontSize(25)
          .fontWeight(FontWeight.Medium)// 重复的属性，可以删除一个
          .textAlign(TextAlign.Center) // 设置文本水平居中
          .margin({ bottom: 50 })
          .backgroundColor('#ff61b6e3')

      }
      }

      Row() {
        Column() {
          Button('+')
            .width(70)
            .height(70)
            .fontSize(30)
            .onClick(() => {
              photo_select(); // 点击按钮时调用选择图片的方法
            })
            .margin({ bottom: 20 })

          Text('点击添加图片')
            .fontSize(20)
            .fontColor(Color.White)

        }
      }
      .alignItems(VerticalAlign.Center) // 垂直居中
      .justifyContent(FlexAlign.Center) // 水平居中
      .backgroundColor(Color.Gray)
      .width('80%')
      .height(400)
      .borderRadius(10)
      .margin({ top: 15 })
      .margin({ bottom: 100 }) // 将整个Column下移180像素

      // 添加“开始检测”按钮
      Button('开始检测')
        .width('60%')// 按钮宽度100%
        .height(60)
        .fontSize(20)
        .backgroundColor('#ff61b6e3')
        .foregroundColor(Color.Black)
    }
  }
}


